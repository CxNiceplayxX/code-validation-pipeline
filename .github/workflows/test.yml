name: Code Validation Pipeline Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm run install-deps
      
    - name: Run comprehensive test suite
      run: npm test
      
    - name: Run examples
      run: npm run example
      
    - name: Test pipeline statistics
      run: |
        node -e "
        const ValidationPipeline = require('./validation_pipeline');
        const pipeline = new ValidationPipeline();
        console.log('Pipeline Stats:', pipeline.getStats());
        console.log('Supported Languages:', pipeline.getSupportedLanguages());
        "

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: Install dependencies
      run: npm run install-deps
      
    - name: Run security audit
      run: npm audit --audit-level moderate
      
    - name: Check for vulnerabilities
      run: npm audit --audit-level high --production

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: Check file structure
      run: |
        echo "Checking project structure..."
        ls -la
        echo "Validators:"
        ls -la validators/
        echo "Components:"
        ls -la components/
        echo "Tests:"
        ls -la tests/
        echo "Examples:"
        ls -la examples/
        
    - name: Validate package.json
      run: node -p "JSON.stringify(require('./package.json'), null, 2)"
      
    - name: Check for required files
      run: |
        test -f README.md || (echo "README.md missing" && exit 1)
        test -f LICENSE || (echo "LICENSE missing" && exit 1)
        test -f package.json || (echo "package.json missing" && exit 1)
        test -f validation_pipeline.js || (echo "Main file missing" && exit 1)
        echo "All required files present ✅"

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: Install dependencies
      run: npm run install-deps
      
    - name: Test HTML validation
      run: |
        node -e "
        const ValidationPipeline = require('./validation_pipeline');
        const pipeline = new ValidationPipeline();
        
        pipeline.execute({
          problemStatement: 'Create a simple HTML page',
          language: 'html',
          codeGenerator: () => '<!DOCTYPE html><html><head><title>Test</title></head><body><h1>Hello</h1></body></html>'
        }).then(result => {
          if (!result.success) throw new Error('HTML validation failed');
          console.log('✅ HTML validation passed');
        }).catch(console.error);
        "
        
    - name: Test CSS validation
      run: |
        node -e "
        const ValidationPipeline = require('./validation_pipeline');
        const pipeline = new ValidationPipeline();
        
        pipeline.execute({
          problemStatement: 'Create CSS styles',
          language: 'css',
          codeGenerator: () => 'body { margin: 0; padding: 20px; }'
        }).then(result => {
          if (!result.success) throw new Error('CSS validation failed');
          console.log('✅ CSS validation passed');
        }).catch(console.error);
        "
        
    - name: Test JavaScript validation
      run: |
        node -e "
        const ValidationPipeline = require('./validation_pipeline');
        const pipeline = new ValidationPipeline();
        
        pipeline.execute({
          problemStatement: 'Create a function',
          language: 'javascript',
          codeGenerator: () => 'function test() { return \"hello\"; }'
        }).then(result => {
          if (!result.success) throw new Error('JavaScript validation failed');
          console.log('✅ JavaScript validation passed');
        }).catch(console.error);
        "